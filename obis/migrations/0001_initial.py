# Generated by Django 3.1.3 on 2020-11-23 04:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Acctax',
            fields=[
                ('a_id', models.IntegerField(blank=True, null=True)),
                ('acode', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('sname', models.CharField(blank=True, max_length=500)),
                ('scientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('genus', models.CharField(blank=True, max_length=500)),
                ('species', models.CharField(blank=True, max_length=500)),
                ('subspecies', models.CharField(blank=True, max_length=500)),
                ('variety', models.CharField(blank=True, max_length=500)),
                ('forma', models.CharField(blank=True, max_length=500)),
                ('elcode', models.CharField(blank=True, max_length=500)),
                ('gelcode', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=500)),
                ('usda_code', models.CharField(blank=True, max_length=500)),
                ('tsn', models.IntegerField(blank=True, null=True)),
                ('scientificname', models.CharField(blank=True, max_length=500)),
                ('sspscientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('varscientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('formascientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('tracked', models.BooleanField(null=True)),
            ],
            options={
                'db_table': 'acctax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasisOfRecordLookup',
            fields=[
                ('id', models.IntegerField()),
                ('basisofrecord', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'basisofrecord_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryLookup',
            fields=[
                ('a_id', models.IntegerField()),
                ('category', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'category_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comtax',
            fields=[
                ('c_id', models.IntegerField(primary_key=True, serialize=False)),
                ('vernacularname', models.CharField(blank=True, max_length=500)),
                ('primary_name', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'comtax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoTrs',
            fields=[
                ('gid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('trs', models.CharField(blank=True, max_length=30)),
                ('geom', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'co_trs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('county', models.CharField(blank=True, max_length=25, primary_key=True, serialize=False, unique=True)),
                ('gid', models.IntegerField()),
            ],
            options={
                'db_table': 'county',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DDistConfidence',
            fields=[
                ('d_dist_confidence_id', models.IntegerField()),
                ('dist_confidence', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'd_dist_confidence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionData',
            fields=[
                ('d_id', models.IntegerField(primary_key=True, serialize=False)),
                ('elcode', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'distribution_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DOrigin',
            fields=[
                ('d_origin_id', models.IntegerField()),
                ('origin', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'd_origin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DPopulation',
            fields=[
                ('d_population_id', models.IntegerField()),
                ('population', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'd_population',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DPresenceAbsence',
            fields=[
                ('d_presence_absence_id', models.IntegerField()),
                ('presence_absence', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'd_presence_absence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DRegularity',
            fields=[
                ('d_regularity_id', models.IntegerField()),
                ('regularity', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'd_regularity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FedStatus',
            fields=[
                ('status_id', models.IntegerField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=500)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'fed_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeographyColumns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_table_catalog', models.TextField(blank=True)),
                ('f_table_schema', models.TextField(blank=True)),
                ('f_table_name', models.TextField(blank=True)),
                ('f_geography_column', models.TextField(blank=True)),
                ('coord_dimension', models.IntegerField(blank=True, null=True)),
                ('srid', models.IntegerField(blank=True, null=True)),
                ('type', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'geography_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeometryColumns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_table_catalog', models.CharField(blank=True, max_length=256)),
                ('f_table_schema', models.CharField(blank=True, max_length=256)),
                ('f_table_name', models.CharField(blank=True, max_length=256)),
                ('f_geometry_column', models.CharField(blank=True, max_length=256)),
                ('coord_dimension', models.IntegerField(blank=True, null=True)),
                ('srid', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'geometry_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalRankLookup',
            fields=[
                ('id', models.IntegerField()),
                ('code', models.CharField(max_length=15, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'global_rank_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hightax',
            fields=[
                ('phylum', models.CharField(blank=True, max_length=500)),
                ('taxclass', models.CharField(blank=True, max_length=500)),
                ('taxorder', models.CharField(blank=True, max_length=500)),
                ('family', models.CharField(max_length=500, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'hightax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IdentificationVerification',
            fields=[
                ('pkey', models.IntegerField(primary_key=True, serialize=False)),
                ('catalognumber', models.CharField(blank=True, max_length=500)),
                ('identifiedby', models.CharField(blank=True, max_length=500)),
                ('identificationremarks', models.CharField(blank=True, max_length=500)),
                ('datalastmodified', models.CharField(blank=True, max_length=500)),
                ('identifiedacode', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'identification_verification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('institutioncode', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('institution', models.CharField(blank=True, max_length=75)),
                ('curator', models.CharField(blank=True, max_length=25)),
                ('email', models.CharField(blank=True, max_length=40)),
                ('telephone', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('country', models.CharField(blank=True, max_length=5)),
                ('zipcode', models.CharField(blank=True, max_length=55)),
                ('institutiontype', models.CharField(blank=True, max_length=50)),
                ('link', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'institution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IUCNLookup',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=60)),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'iucn_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KingdomLookup',
            fields=[
                ('id', models.IntegerField()),
                ('kingdom', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'kingdom_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NameCategoryDescLookup',
            fields=[
                ('a_id', models.IntegerField()),
                ('name_category_desc', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'name_category_desc_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NameTypeDescLookup',
            fields=[
                ('a_id', models.IntegerField()),
                ('name_type_desc', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'name_type_desc_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NativityLookup',
            fields=[
                ('n_id', models.IntegerField()),
                ('nativity', models.CharField(max_length=60, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'nativity_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('gid', models.IntegerField(primary_key=True, serialize=False)),
                ('eventdate', models.DateField(blank=True, null=True)),
                ('recordedby', models.CharField(blank=True, max_length=500)),
                ('locality', models.CharField(blank=True, max_length=500)),
                ('behavior', models.CharField(blank=True, max_length=500)),
                ('habitat', models.CharField(blank=True, max_length=500)),
                ('sex', models.CharField(blank=True, max_length=500)),
                ('lifestage', models.CharField(blank=True, max_length=500)),
                ('associatedtaxa', models.CharField(blank=True, max_length=500)),
                ('verbatimelevation', models.FloatField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('depthaccuracy', models.IntegerField(blank=True, null=True)),
                ('individualcount', models.IntegerField(blank=True, null=True)),
                ('occurrenceremarks', models.CharField(blank=True, max_length=500)),
                ('taxonremarks', models.CharField(blank=True, max_length=500)),
                ('catalognumber', models.CharField(blank=True, max_length=500)),
                ('othercatalognumbers', models.CharField(blank=True, max_length=500)),
                ('typestatus', models.CharField(blank=True, max_length=25)),
                ('recordnumber', models.CharField(blank=True, max_length=500)),
                ('samplingprotocol', models.CharField(blank=True, max_length=500)),
                ('preparations', models.CharField(blank=True, max_length=500)),
                ('primary_data', models.CharField(blank=True, max_length=500)),
                ('associatedreferences', models.CharField(blank=True, max_length=500)),
                ('coordinateprecision', models.IntegerField(blank=True, null=True)),
                ('decimallatitude', models.FloatField(blank=True, null=True)),
                ('decimallongitude', models.FloatField(blank=True, null=True)),
                ('geodeticdatum', models.CharField(blank=True, max_length=10)),
                ('georeferencedby', models.CharField(blank=True, max_length=500)),
                ('georeferenceddate', models.DateField(blank=True, null=True)),
                ('georeferenceremarks', models.CharField(blank=True, max_length=500)),
                ('georeferencesources', models.CharField(blank=True, max_length=500)),
                ('georeferenceverificationstatus', models.CharField(blank=True, max_length=500)),
                ('geom', models.TextField(blank=True)),
                ('problem_with_record', models.CharField(blank=True, max_length=500)),
                ('previousidentifications', models.CharField(blank=True, max_length=500)),
                ('identificationverificationstatus', models.CharField(blank=True, max_length=500)),
                ('identificationconfidence', models.CharField(blank=True, max_length=10)),
                ('identificationremarks', models.CharField(blank=True, max_length=500)),
                ('datelastmodified', models.DateField(blank=True, null=True)),
                ('associatedoccurrences', models.CharField(blank=True, max_length=500)),
                ('associatedsequences', models.CharField(blank=True, max_length=500)),
                ('entby', models.CharField(blank=True, max_length=500)),
                ('entrydate', models.DateField(blank=True, null=True)),
                ('obs_gid', models.IntegerField(blank=True, null=True)),
                ('mtr', models.TextField(blank=True)),
                ('township', models.IntegerField(blank=True, null=True)),
                ('ns', models.TextField(blank=True)),
                ('range', models.IntegerField(blank=True, null=True)),
                ('ew', models.TextField(blank=True)),
                ('section', models.IntegerField(blank=True, null=True)),
                ('quarter', models.TextField(blank=True)),
                ('zone', models.IntegerField(blank=True, null=True)),
                ('utme', models.IntegerField(blank=True, null=True)),
                ('utmn', models.IntegerField(blank=True, null=True)),
                ('hiderecord', models.BooleanField(null=True)),
                ('hiderecordcomment', models.CharField(blank=True, max_length=500)),
                ('relationshipremarks', models.CharField(blank=True, max_length=500)),
                ('informationwitheld', models.BooleanField(null=True)),
                ('awaitingreview', models.IntegerField(blank=True, null=True)),
                ('occurrenceid', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'occurrence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OkSwap',
            fields=[
                ('swap_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tier', models.CharField(blank=True, max_length=4)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'ok_swap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankChange',
            fields=[
                ('r_id', models.IntegerField(primary_key=True, serialize=False)),
                ('previous_s_rank', models.CharField(blank=True, max_length=500)),
                ('s_rank', models.CharField(blank=True, max_length=500)),
                ('changedby', models.CharField(blank=True, max_length=500)),
                ('rankremarks', models.CharField(blank=True, max_length=500)),
                ('datelastmodified', models.DateField(blank=True, null=True)),
                ('previousdatemodified', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rank_change',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RasterColumns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_table_catalog', models.TextField(blank=True)),
                ('r_table_schema', models.TextField(blank=True)),
                ('r_table_name', models.TextField(blank=True)),
                ('r_raster_column', models.TextField(blank=True)),
                ('srid', models.IntegerField(blank=True, null=True)),
                ('scale_x', models.FloatField(blank=True, null=True)),
                ('scale_y', models.FloatField(blank=True, null=True)),
                ('blocksize_x', models.IntegerField(blank=True, null=True)),
                ('blocksize_y', models.IntegerField(blank=True, null=True)),
                ('same_alignment', models.BooleanField(null=True)),
                ('regular_blocking', models.BooleanField(null=True)),
                ('num_bands', models.IntegerField(blank=True, null=True)),
                ('pixel_types', models.TextField(blank=True)),
                ('nodata_values', models.TextField(blank=True)),
                ('out_db', models.TextField(blank=True)),
                ('extent', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'raster_columns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RasterOverviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('o_table_catalog', models.TextField(blank=True)),
                ('o_table_schema', models.TextField(blank=True)),
                ('o_table_name', models.TextField(blank=True)),
                ('o_raster_column', models.TextField(blank=True)),
                ('r_table_catalog', models.TextField(blank=True)),
                ('r_table_schema', models.TextField(blank=True)),
                ('r_table_name', models.TextField(blank=True)),
                ('r_raster_column', models.TextField(blank=True)),
                ('overview_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'raster_overviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceTypeLookup',
            fields=[
                ('id', models.IntegerField()),
                ('resourcetype', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'resourcetype_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('source', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
                ('auth_name', models.CharField(blank=True, max_length=256)),
                ('auth_srid', models.IntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048)),
                ('proj4text', models.CharField(blank=True, max_length=2048)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateRankLookup',
            fields=[
                ('id', models.IntegerField()),
                ('code', models.CharField(max_length=15, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'state_rank_lu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StStatus',
            fields=[
                ('status_id', models.IntegerField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=500)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'st_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Syntax',
            fields=[
                ('s_id', models.IntegerField()),
                ('scode', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('sname', models.CharField(blank=True, max_length=500)),
                ('scientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('family', models.CharField(blank=True, max_length=500)),
                ('genus', models.CharField(blank=True, max_length=500)),
                ('species', models.CharField(blank=True, max_length=500)),
                ('subspecies', models.CharField(blank=True, max_length=500)),
                ('variety', models.CharField(blank=True, max_length=500)),
                ('scientificname', models.CharField(blank=True, max_length=500)),
                ('sspscientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('varscientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('formascientificnameauthorship', models.CharField(blank=True, max_length=500)),
                ('tsn', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'syntax',
                'managed': False,
            },
        ),
    ]
