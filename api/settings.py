"""
Django settings for obis_api project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os

from api import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = config.BASE_DIR

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG          = config.DEBUG
TEMPLATE_DEBUG = config.TEMPLATE_DEBUG

# Hosts the API is allowed to run on.
ALLOWED_HOSTS = config.ALLOWED_HOSTS

# Miscellaneous settings
USE_X_FORWARDED_HOST = config.USE_X_FORWARDED_HOST
SECURE_PROXY_SSL_HEADER = config.SECURE_PROXY_SSL_HEADER
FORCE_SCRIPT_NAME = config.FORCE_SCRIPT_NAME

# Rest Framework Settings
REST_FRAMEWORK = {
    # Use hyperlinked styles by default.
    # Only used if the 'serializer_class' attribute is not set on a view.
    'DEFAULT_MODEL_SERIALIZER_CLASS':
        'rest_framework.serializers.HyperlinkedModelSerializer',

    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ),

    # Authentication defaults
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),

    # Renderer defaults
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework.renderers.JSONRenderer',
    ],

    # Pagination settings
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE':                150
}

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_filters',
    'obis',
    'rest_auth',
    'rest_auth.registration',
    'rest_framework',
    'rest_framework.authtoken'
]

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'api.middleware.DisableCSRFMiddleware',
    'api.middleware.DisableCORSMiddleware'
]

SITE_ID = 1

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'api.processor.title',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'

# Database
DATABASES        = config.DATABASES
DATABASE_ROUTERS = config.DATABASE_ROUTERS

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE     = 'UTC'
USE_I18N      = True
USE_L10N      = True
USE_TZ        = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
# TODO: Might not need this
STATIC_URL       = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static/'),)

# Cookie Domain
SESSION_COOKIE_DOMAIN = config.SESSION_COOKIE_DOMAIN
CSRF_COOKIE_DOMAIN    = config.CSRF_COOKIE_DOMAIN

# Not sure what this is, honestly
base = ''
if FORCE_SCRIPT_NAME:
    if FORCE_SCRIPT_NAME[-1] == '/':
        base = FORCE_SCRIPT_NAME[:-1]
    else:
        base = FORCE_SCRIPT_NAME
    LOGIN_REDIRECT_URL = '%s/' % (base)
    LOGIN_URL          = '%s/api-auth/login' % (base) # TODO: might change
else:
    LOGIN_REDIRECT_URL = '%s/' % (base)
    LOGIN_URL          = '%s/api-auth/login' % (base) # TODO: might change

# Registration account adapter
# TODO: comment
ACCOUNT_ADAPTER              = 'api.adapter.CustomDefaultAccountAdapter'
ACCOUNT_EMAIL_SUBJECT_PREFIX = "[obis.ou.edu] "
ACCOUNT_SIGNUP_FORM_CLASS    = 'api.forms.SignupForm'
URL_FRONT                    = 'http://obsvweb1.ou.edu/obis/registration/' # TODO: will change
